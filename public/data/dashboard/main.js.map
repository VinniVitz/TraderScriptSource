{"version":3,"sources":["./src/environments/environment.ts","./src/app/models/influx-filter-type.enum.ts","./src/app/services/interceptor.service.ts","./src/app/states/chart.state.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/states/helper.state.ts","./src/app/app.module.ts","./src/app/states/auth.state.ts","./src/app/services/auth.service.ts","./src/app/services/chart.service.ts","./src/app/services/config-resolver.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum INFLUX_FILTER_TYPE {\n  STOCK = 'stock',\n  EMA = 'ema',\n  RSI = 'rsi',\n  MACD = 'macd'\n}\n","import { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { Injectable, NgZone } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpEvent,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthState } from '../states/auth.state';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n  constructor(\n    private store: Store,\n    private router: Router,\n    private ngZone: NgZone\n  ) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token = this.store.selectSnapshot(AuthState.token);\n    const tokenizedReq = req.clone({\n      headers: req.headers.set('Authorization', `Token ${token}`)\n    });\n    return next.handle(tokenizedReq).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.ngZone.run(() => this.router.navigateByUrl('login'));\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { DashboardNotification } from './../models/dashboard-notification.model';\nimport { INFLUX_FILTER_TYPE } from './../models/influx-filter-type.enum';\nimport { InfluxConfig } from './../models/influx-config.model';\nimport { ChartService } from './../services/chart.service';\nimport { Injectable, Injector } from '@angular/core';\nimport { Selector, State, StateContext, StateToken } from '@ngxs/store';\nimport { defer, Observable } from 'rxjs';\nimport { EmitterAction, Receiver } from '@ngxs-labs/emitter';\nimport { ChartStateModel } from '../models/chart-state.model';\nimport { InfluxChartData } from '../models/influx-chart-data.model';\nimport { ChartData } from 'chart.js';\nimport { InfluxNotification } from '../models/influx-notification.model';\n\nconst AUTH_STATE_TOKEN = new StateToken<ChartStateModel>('chart');\nconst DEFAULT_STATE = { data: null, config: null, notifications: [] };\n\n@State<ChartStateModel>({\n  name: AUTH_STATE_TOKEN,\n  defaults: DEFAULT_STATE\n})\n@Injectable({ providedIn: 'root' })\nexport class ChartState {\n  private static resource: ChartService;\n\n  constructor(inj: Injector) {\n    ChartState.resource = inj.get(ChartService);\n  }\n\n  @Selector()\n  static data(state: ChartStateModel): ChartData {\n    return JSON.parse(JSON.stringify(state.data));\n  }\n\n  @Selector()\n  static config(state: ChartStateModel): InfluxConfig {\n    return state.config;\n  }\n\n  @Selector()\n  static notifications(state: ChartStateModel): DashboardNotification[] {\n    return state.notifications;\n  }\n\n  @Receiver()\n  static onFetchData(\n    ctx: StateContext<ChartStateModel>,\n    action: EmitterAction<InfluxConfig>\n  ): Observable<ChartData> {\n    return defer(async () => {\n      const config = action.payload;\n      const data: ChartData = { datasets: [] };\n      let query = `from(bucket: \\\"${config.configName}_buckets\\\")\\n|>range(start: -${config.range})`;\n      const stock = this.csvJSON<InfluxChartData>(\n        await this.resource\n          .fetchData(\n            config.org,\n            `${query}\\n|>filter(fn: (r) => r._measurement == \\\"${config.measurement}\\\")`\n          )\n          .toPromise()\n      );\n      const labels = this.getLabels(stock);\n      data.labels = labels.slice(0, labels.length - 2);\n      const notifications = this.csvJSON<InfluxNotification>(\n        await this.resource\n          .fetchData(\n            config.org,\n            `from(bucket: \\\"_monitoring\\\")\\n|>range(start: -100m)\\n|>filter(fn: (r) => r._measurement == \\\"notifications\\\" and r._field == \\\"_message\\\")`\n          )\n          .toPromise()\n      );\n      const dashboardNotifications: DashboardNotification[] = notifications\n        .slice(0, notifications.length - 2)\n        .map((notification, i) => ({\n          number: ++i,\n          name: notification['check_type\\r'].substring(\n            0,\n            notification['check_type\\r'].length - 2\n          ),\n          time: this.getTimeFromDate(new Date(notification._time)),\n          description: notification._value,\n          sent: notification._sent\n        }));\n      await this.executeSequentially(config.defs, async (def) => {\n        if (def.show) {\n          switch (def.type) {\n            case INFLUX_FILTER_TYPE.STOCK:\n              query = `${query}\\n|>filter(fn: (r) => r._measurement == \\\"${config.measurement}\\\")`;\n              break;\n            case INFLUX_FILTER_TYPE.EMA:\n              query = `${query}\\n|>filter(fn: (r) => r._measurement == \\\"${config.measurement}\\\")\\n|>exponentialMovingAverage(n: ${def.period})`;\n              break;\n            case INFLUX_FILTER_TYPE.RSI:\n              query = `${query}\\n|>filter(fn: (r) => r._measurement == \\\"${config.measurement}\\\")\\n|>relativeStrengthIndex(n: ${def.period})`;\n              break;\n            case INFLUX_FILTER_TYPE.MACD:\n              query = `${query}\\n|>filter(fn: (r) => r._measurement == \\\"macd\\\" and r._field == \\\"${def.name}\\\")`;\n              break;\n            default:\n              break;\n          }\n          const queryResult = this.csvJSON<InfluxChartData>(\n            await this.resource.fetchData(config.org, query).toPromise()\n          );\n          const dataValues = this.getData(queryResult);\n          data.datasets.push({\n            label: def.name,\n            data: dataValues.slice(0, dataValues.length - 2),\n            borderColor: def.color.toHexString(),\n            backgroundColor: 'rgba(0, 0, 0, 0)'\n          });\n        }\n      });\n      ctx.patchState({ data, config, notifications: dashboardNotifications });\n      return data;\n    });\n  }\n\n  private static csvJSON<T>(csv: string): T[] {\n    const lines = csv.split('\\n');\n    const result = [];\n    const headers = lines[0].split(',');\n\n    for (let i = 1; i < lines.length; i++) {\n      const obj = {};\n      const currentline = lines[i].split(',');\n\n      for (let j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n\n      result.push(obj);\n    }\n    return result;\n  }\n\n  private static getLabels(data: InfluxChartData[]): string[] {\n    return data.map((item) => this.getTimeFromDate(new Date(item._time)));\n  }\n\n  private static getData(data: InfluxChartData[]): number[] {\n    return data.map((item) => Number(item._value));\n  }\n\n  private static getTimeFromDate(date: Date): string {\n    const h = date.getHours();\n    const m = date.getMinutes();\n    const s = date.getSeconds();\n    return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${\n      s < 10 ? '0' + s : s\n    }`;\n  }\n\n  private static async executeSequentially<T>(\n    items: T[],\n    handler: (e: T) => Promise<any>\n  ): Promise<void> {\n    for (const item of items) {\n      await handler(item);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'influx-app';\n}\n","<router-outlet></router-outlet>\n","import { AuthState } from './../states/auth.state';\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { AuthService } from '../services/auth.service';\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router, private store: Store) {}\n\n  canActivate(): boolean {\n    if (!this.store.selectSnapshot(AuthState.isLoggedIn)) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { EmitterAction } from '@ngxs-labs/emitter';\nimport { getActionTypeFromInstance, NgxsNextPluginFn } from '@ngxs/store';\nexport function logoutPlugin(state: any, action: EmitterAction, next: NgxsNextPluginFn) {\n  // Use the get action type helper to determine the type\n  if (getActionTypeFromInstance(action).includes('AuthState.onLogout')) {\n    // if we are a logout type, lets erase all the state\n    state = {};\n  }\n  // return the next function with the empty state\n  return next(state, action);\n}\n","import { InterceptorService } from './services/interceptor.service';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\nimport { AuthState } from './states/auth.state';\nimport { environment } from 'src/environments/environment';\nimport { NgxsEmitPluginModule } from '@ngxs-labs/emitter';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { ChartState } from './states/chart.state';\nimport { logoutPlugin } from './states/helper.state';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgxsModule.forRoot([AuthState], {\n      developmentMode: !environment.production\n    }),\n    NgxsStoragePluginModule.forRoot({ key: [AuthState, ChartState] }),\n    NgxsEmitPluginModule.forRoot()\n  ],\n  providers: [\n    AuthGuard,\n    { provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true },\n    { provide: NGXS_PLUGINS, useValue: logoutPlugin, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { AuthStateModel } from './../models/auth-state.model';\nimport { Injectable, Injector } from '@angular/core';\nimport { Selector, State, StateContext, StateToken } from '@ngxs/store';\nimport { defer, Observable } from 'rxjs';\nimport { EmitterAction, Receiver } from '@ngxs-labs/emitter';\nimport { SignIn } from '../models/signin.model';\nimport { NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\n\nconst AUTH_STATE_TOKEN = new StateToken<AuthStateModel>('auth');\nconst DEFAULT_STATE = {\n  token: null\n};\n@State<AuthStateModel>({\n  name: AUTH_STATE_TOKEN,\n  defaults: DEFAULT_STATE\n})\n@Injectable({ providedIn: 'root' })\nexport class AuthState {\n  private static ngZone: NgZone;\n  private static router: Router;\n\n  constructor(inj: Injector) {\n    AuthState.ngZone = inj.get(NgZone);\n    AuthState.router = inj.get(Router);\n  }\n\n  @Selector()\n  static isLoggedIn(state: AuthStateModel): boolean {\n    return !!state.token;\n  }\n\n  @Selector()\n  static token(state: AuthStateModel): string {\n    return state.token;\n  }\n\n  @Receiver()\n  static onSignIn(\n    ctx: StateContext<AuthStateModel>,\n    action: EmitterAction<SignIn>\n  ): Observable<any> {\n    const token = action.payload.token;\n    return defer(async () => {\n      ctx.patchState({ token });\n      this.ngZone.run(() => this.router.navigateByUrl('dashboard'));\n    });\n  }\n\n  @Receiver()\n  static onLogout(ctx: StateContext<AuthStateModel>): void {\n    ctx.setState(DEFAULT_STATE);\n    this.ngZone.run(() => this.router.navigateByUrl('login'));\n  }\n}\n","import { SignUp } from './../models/signup.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { defer, Observable } from 'rxjs';\nimport { SignIn } from '../models/signin.model';\nimport { InfluxConfig } from '../models/influx-config.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private readonly BASE_URL = 'http://localhost:8086/api/v2';\n\n  constructor(private http: HttpClient) {}\n\n  getUser(): Observable<any> {\n    return this.http.get(`${this.BASE_URL}/me`);\n  }\n\n  getConfig(): Observable<InfluxConfig> {\n    return this.http.get('assets/config.json', { responseType: 'json' });\n  }\n}\n","import { Store } from '@ngxs/store';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class ChartService {\n  private readonly BASE_URL = 'http://localhost:8086/api/v2';\n\n  constructor(private http: HttpClient, private store: Store) {}\n\n  fetchData(org: string, query: string): Observable<any> {\n    return this.http.post(\n      `${this.BASE_URL}/query`,\n      { query },\n      { params: { org }, responseType: 'text' as 'json' }\n    );\n  }\n}\n","import { Store } from '@ngxs/store';\nimport { Color } from '@angular-material-components/color-picker';\nimport { AuthService } from './auth.service';\nimport { InfluxConfig } from './../models/influx-config.model';\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, defer } from 'rxjs';\nimport { INFLUX_FILTER_TYPE } from '../models/influx-filter-type.enum';\nimport { ChartState } from '../states/chart.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigResolverService implements Resolve<InfluxConfig> {\n  constructor(private authService: AuthService, private store: Store) {}\n\n  resolve(): Observable<InfluxConfig> {\n    return defer(async () => {\n      const config = await this.authService.getConfig().toPromise();\n      const storedConfig = this.store.selectSnapshot(ChartState.config);\n      config.defs.unshift({\n        name: 'stock',\n        type: INFLUX_FILTER_TYPE.STOCK,\n        show: true\n      });\n      config.defs = config.defs.map((def) => {\n        const storedDef = storedConfig?.defs.find(\n          (item) => item.name === def.name\n        );\n        return {\n          ...def,\n          color: storedDef?.color\n            ? new Color(storedDef.color.r, storedDef.color.g, storedDef.color.b)\n            : this.getRandomColor(),\n          show: storedDef?.show ?? true\n        };\n      });\n      config.interval = storedConfig?.interval ?? 5;\n      config.range = storedConfig?.range ?? '5m';\n      return config;\n    });\n  }\n\n  private getRandomColor(): Color {\n    return new Color(\n      Math.round(Math.random() * 255),\n      Math.round(Math.random() * 255),\n      Math.round(Math.random() * 255)\n    );\n  }\n}\n","import { ConfigResolverService } from './services/config-resolver.service';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    loadChildren: () =>\n      import('./pages/dashboard/dashboard.module').then(\n        (m) => m.DashboardModule\n      ),\n    canActivate: [AuthGuard],\n    resolve: { config: ConfigResolverService }\n  },\n  {\n    path: 'login',\n    loadChildren: () =>\n      import('./pages/login/login.module').then((m) => m.LoginModule)\n  },\n  {\n    path: '**',\n    redirectTo: 'dashboard'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}